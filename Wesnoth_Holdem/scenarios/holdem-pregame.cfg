#define HOLDEM_SCENARIO
turns=1
victory_when_enemies_defeated=no
[side]
  side=1
  team_name=gambler
  controller=human
  type=Outlaw
  description=Zilead
  canrecruit=1
[/side]
[side]
  side=2
  team_name=gambler
  controller=null
[/side]
[side]
  side=3
  team_name=gambler
  controller=null
[/side]
#enddef

#
# Create the gambler at the specified location.
#
#define SHOW_GAMBLER I X Y
{VARIABLE_OP type format $gambler[{I}].type}
{VARIABLE_OP desc format $gambler[{I}].desc}
[unit]
  side=2
  type=$type
  description=$desc
  x={X}
  y={Y}
[/unit]
{CLEAR_VARIABLE type}
{CLEAR_VARIABLE desc}
#enddef

#
# Move Zilead to X,Y
#
#define MOVE_ZILEAD X Y
[store_unit]
  variable=zilead_store
  kill=no
  [filter]
    description=Zilead
  [/filter]
[/store_unit]
{VARIABLE_OP x format $zilead_store[0].x}
{VARIABLE_OP y format $zilead_store[0].y}
{VARIABLE_OP move_x format (|$x|,{X})}
{VARIABLE_OP move_y format (|$y|,{Y})}

[hide_unit]
  x=$x
  y=$y
[/hide_unit]
[move_unit_fake]
  type=Outlaw
  x=$move_x
  y=$move_y
[/move_unit_fake]
[teleport]
  x={X}
  y={Y}
  [filter]  
    description=Zilead
  [/filter]
[/teleport]

[redraw]
[/redraw]
{CLEAR_VARIABLE x}
{CLEAR_VARIABLE y}
{CLEAR_VARIABLE move_x}
{CLEAR_VARIABLE move_y}
{CLEAR_VARIABLE zilead_store}
#enddef

#define MESSAGE_FROM_GAMBLER I MSG
{VARIABLE_OP desc format $gambler[{I}].desc}
{VARIABLE_OP cap format "|$desc| (|$gambler[{I}].gold|)"}
[message]
  caption=$cap
  description=$desc
  message={MSG}
[/message]
#enddef

#define FOR_EACH_GAMBLER VAR
{VARIABLE ({VAR}) 0}
[while]
  [variable]
    name={VAR}
    less_than=$num_players
  [/variable]
  [do]
#enddef

#define CREATE_MOVE_GAMBLER I X1 Y1 X2 Y2
{VARIABLE_OP type format $gambler[{I}].type}
{VARIABLE_OP movex format (|{X1}|,{X2})}
{VARIABLE_OP movey format (|{Y1}|,{Y2})}
[move_unit_fake]
  type=$type
  x=$movex
  y=$movey
[/move_unit_fake]
{SHOW_GAMBLER ({I}) ({X2}) ({Y2})}
[redraw]
[/redraw]
#enddef

############### USEFUL MACROS ###################

#define FOR_UPTO VAR FROM TO
{VARIABLE ({VAR}) ({FROM})}
[while]
  [variable]
    name={VAR}
    less_than={TO}
  [/variable]
  [do]
#enddef

#define VAR_EQUALS VAR VAL
[variable]
  name={VAR}
  equals={VAL}
[/variable]
#enddef

#define VAR_GREATER VAR VAL
[variable]
  name={VAR}
  greater_than={VAL}
[/variable]
#enddef

#define VAR_LESS VAR VAL
[variable]
  name={VAR}
  less_than={VAL}
[/variable]
#enddef
